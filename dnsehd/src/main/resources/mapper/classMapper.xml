<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.application.dnsehd.dao.ClassDAO">

	<select id="getAllClassCnt" parameterType="String" resultType="int">
		SELECT 	COUNT(*)
		FROM		CLASS
	</select>
	
	<insert id="insertClass" parameterType="ClassDTO" useGeneratedKeys="true" keyProperty="classNo">
		INSERT INTO CLASS (
			CLASS_NM,
			CLASS_CONTENT,
			CLASS_PRICE,
			CLASS_TIME,
			CLASS_CATEGORY,
			CLASS_LIMIT,
			ADMIN_ID,
			TEACHER_NO
		)
		VALUES (
			#{classNm},
			#{classContent},
			#{classPrice},
			#{classTime},
			#{classCategory},
			#{classLimit},
			#{adminId},
			#{teacherNo}
		)
		<selectKey keyColumn="GENERATED_KEY" keyProperty="classNo" order="AFTER" resultType="int">
		    SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<insert id="insertClassImg" parameterType="ClassImgDTO">
		INSERT INTO CLASS_IMAGES (
				CLASS_NO,
				CLASS_IMG_NM,
				CLASS_IMG_UUID
		)
		VALUES (
				#{classNo},
				#{classImgNm},
				#{classImgUUID}
		)
	</insert>

	<select id="selectAdminClassList" resultType="ClassDTO">
		SELECT * FROM CLASS	
	</select>
	
	<resultMap type="hashmap" id="class">
		<result column="CLASS_NO" property="classNo"></result>
		<result column="CLASS_NM" property="classNm"></result>
		<result column="CLASS_CONTENT" property="classContent"></result>
		<result column="CLASS_PRICE" property="classPrice"></result>
		<result column="CLASS_TIME" property="classTime"></result>
		<result column="CLASS_CATEGORY" property="classCategory"></result>
		<result column="CLASS_LIMIT" property="classLimit"></result>
		<result column="TEACHER_NO" property="teacherNo"></result>
		<result column="CLASS_IMG_NO" property="classImgNo"></result>
		<result column="CLASS_IMG_NM" property="classImgNm"></result>
		<result column="CLASS_IMG_UUID" property="classImgUUID"></result>
		<result column="RESV_NO" property="resvNo"></result>
		<result column="REVIEW_NO" property="reviewNo"></result>
		<result column="REVIEW_TITLE" property="reviewTitle"></result>
		<result column="REVIEW_CONTENT" property="reviewContent"></result>
		<result column="REVIEW_SCORE" property="reviewScore"></result>
		<result column="TEACHER_NM" property="teacherNm"></result>
		<result column="TEACHER_CAREER" property="teacherCareer"></result>
	</resultMap>

	<select id="selectClassList" parameterType="hashmap" resultMap="class">
	    SELECT
	        C.CLASS_NO,
	        C.CLASS_NM,
	        C.CLASS_CONTENT,
	        C.CLASS_PRICE,
	        C.CLASS_TIME,
	        C.CLASS_CATEGORY,
	        C.CLASS_LIMIT,
	        C.TEACHER_NO,
	        CI.CLASS_IMG_NO,
	        CI.CLASS_IMG_NM,
	        CI.CLASS_IMG_UUID,
	        ROUND(AVG(R.REVIEW_SCORE)) REVIEW_SCORE
	    FROM CLASS C
	    JOIN CLASS_IMAGES CI ON C.CLASS_NO = CI.CLASS_NO
	    LEFT JOIN REVIEWS R ON R.CLASS_NO = C.CLASS_NO
	    GROUP BY CI.CLASS_IMG_NO
	    ORDER BY C.CLASS_NO DESC
	    LIMIT #{startClassIdx}, #{onePageViewCnt}
	</select>

	
	<select id="selectClassDetail" parameterType="int" resultMap="class">
	    SELECT
	        C.CLASS_NO CLASS_NO,
	        C.CLASS_NM CLASS_NM,
	        C.CLASS_CONTENT CLASS_CONTENT,
	        C.CLASS_PRICE CLASS_PRICE,
	        C.CLASS_TIME CLASS_TIME,
	        C.CLASS_CATEGORY CLASS_CATEGORY,
	        C.CLASS_LIMIT CLASS_LIMIT,
	        C.TEACHER_NO TEACHER_NO,
	        CI.CLASS_IMG_NO CLASS_IMG_NO,
	        CI.CLASS_IMG_NM CLASS_IMG_NM,
	        CI.CLASS_IMG_UUID CLASS_IMG_UUID,
	        T.TEACHER_NM TEACHER_NM,
	        T.TEACHER_CAREER TEACHER_CAREER
	    FROM CLASS C
	    LEFT JOIN CLASS_IMAGES CI ON C.CLASS_NO = CI.CLASS_NO
    		LEFT JOIN TEACHER T ON C.TEACHER_NO = T.TEACHER_NO
	    WHERE C.CLASS_NO = #{classNo}
	</select>

	
	<update id="updateClass" parameterType="ClassDTO">
		UPDATE	CLASS
		SET		CLASS_NM = #{classNm},
				CLASS_CONTENT = #{classContent},
				CLASS_PRICE = #{classPrice},
				CLASS_TIME = #{classTime},
				CLASS_CATEGORY = #{classCategory},
				CLASS_LIMIT = #{classLimit}
		WHERE 	CLASS_NO = #{classNo}
	</update>
	
	<update id="updateClassImg" parameterType="ClassImgDTO">
	    UPDATE 
	    		CLASS_IMAGES
	    SET 
	    		CLASS_IMG_NM = #{classImgNm},
	        	CLASS_IMG_UUID = #{classImgUUID}
	    WHERE 
	    		CLASS_NO = #{classNo}
	</update>
	
	<delete id="deleteClass" parameterType="int">
		DELETE FROM CLASS
		WHERE 		CLASS_NO = #{classNo}
	</delete>
	
	<delete id="deleteClassImg" parameterType="int">
		DELETE FROM CLASS_IMAGES
		WHERE 		CLASS_NO = #{classNo}
	</delete>
	
	<delete id="deleteResv" parameterType="int">
		DELETE FROM RESERVATIONS
		WHERE 		CLASS_NO = #{classNo}
	</delete>

	<delete id="deleteReview" parameterType="int">
		DELETE FROM REVIEWS
		WHERE 		CLASS_NO = #{classNo}
	</delete>
	
	<delete id="deleteReviewImg" parameterType="int">
	    DELETE FROM REVIEW_IMAGES
	    WHERE REVIEW_NO IN (
	        SELECT REVIEW_NO FROM REVIEWS WHERE CLASS_NO = #{classNo}
	    )
	</delete>

	
	<select id="selectTeacherList" resultType="teacherDTO">
		SELECT 	TEACHER_NO ,TEACHER_NM
		FROM 	TEACHER	
	</select>
	
	<select id="selectListSearchClass" resultMap="class" parameterType="hashMap">
		SELECT
	        C.CLASS_NO,
	        C.CLASS_NM,
	        C.CLASS_CONTENT,
	        C.CLASS_PRICE,
	        C.CLASS_TIME,
	        C.CLASS_CATEGORY,
	        C.CLASS_LIMIT,
	        C.TEACHER_NO,
	        CI.CLASS_IMG_NO,
	        CI.CLASS_IMG_NM,
	        CI.CLASS_IMG_UUID
	    FROM CLASS C
	    JOIN CLASS_IMAGES CI ON C.CLASS_NO = CI.CLASS_NO
		WHERE	CLASS_NM LIKE CONCAT ('%' , #{searchWord}, '%')
	</select>
	
	<select id="selectcheckClass" resultMap="class">
        SELECT
	        C.CLASS_NO,
	        C.CLASS_NM,
	        C.CLASS_CONTENT,
	        C.CLASS_PRICE,
	        C.CLASS_TIME,
	        C.CLASS_CATEGORY,
	        C.CLASS_LIMIT,
	        C.TEACHER_NO,
	        CI.CLASS_IMG_NO,
	        CI.CLASS_IMG_NM,
	        CI.CLASS_IMG_UUID
	    FROM CLASS C
	    JOIN CLASS_IMAGES CI ON C.CLASS_NO = CI.CLASS_NO
        WHERE C.CLASS_CATEGORY IN
        <foreach collection="array" item="classCategory" open="(" separator="," close=")">
            #{classCategory}
        </foreach>
    </select>
    
    <select id="selectReviewList" parameterType="int">
	    SELECT 	REVIEW_TITLE, REVIEW_CONTENT, REVIEW_SCORE
	    FROM		REVIEWS
	    WHERE	CLASS_NO = #{classNo}
	</select>
	
	<select id="selectReviewScore" parameterType="int" resultType="int">
	    SELECT COALESCE(ROUND(AVG(REVIEW_SCORE)), 0) AS AVG_SCORE
	    FROM REVIEWS
	    WHERE CLASS_NO = #{classNo}
	</select>


		
</mapper>